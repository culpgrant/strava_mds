name: CI Pipeline

on:
    pull_request:
      branches:
        - main
    workflow_dispatch:
      inputs:
        logLevel:
          description: 'Log level'
          required: true
          default: 'warning'
          type: choice
          options:
          - info
          - warning
          - debug
        tags:
          description: 'Test scenario tags'
          required: false
          type: boolean

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
          pull-requests: write
          contents: read
        timeout-minutes: 8
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3
              with:
                persist-credentials: false
                fetch-depth: 0

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.9'

            - name: Install poetry
              uses: snok/install-poetry@v1
              with:
                virtualenvs-create: true
                virtualenvs-in-project: true
                installer-parallel: true
            #----------------------------------------------
            #       load cached venv if cache exists
            #----------------------------------------------
            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v3
              with:
                path: .venv
                key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

            #----------------------------------------------
            # install dependencies if cache does not exist
            #----------------------------------------------
            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --no-interaction --no-root
            #----------------------------------------------
            # install your root project, if required
            #----------------------------------------------
            - name: Install project
              run: poetry install --no-interaction

            #----------------------------------------------
            # set python path for custom library
            #----------------------------------------------

            - name: Set Pythonpath
              run: |
                echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

            - name: Run Pre-commit Hooks
              uses: pre-commit/action@v3.0.0

            - name: Test with pytest
              run: |
                source .venv/bin/activate
                pytest --junitxml=junit/test-results.xml --cov --cov-report xml

            - name: Pytest coverage comment
              id: coverageComment
              uses: MishaKav/pytest-coverage-comment@v1.1.48
              with:
                  pytest-xml-coverage-path: ./coverage.xml
                  junitxml-path: junit/test-results.xml
